Scena: Usciamo in strada in mezzo alla metropoli, alziamo lo sguardo, i palazzi si ergono attorno a noi e coprono buona parte della visuale.


---------------- PALAZZI ------------------
l'ideale sarebbe in stile fisheye, l'applicazione si apre con i palazzi che coprono molto della visuale. all'avvio dell'interazione i palazzi scendono e il cielo si libera, l'idea è quella di "entrare" nel cielo.


------------------ CIELO -------------------
4 layers: Cielo sporco, Stelle, Cielo pulito.

-Cielo sporco:
sfumato, deve essere oppressivo, nebbioso, arancione sporco al livello degli edifici e andare via via lentamente verso il blu notte proprio del cielo.
https://processing.org/examples/lineargradient.html

-Stelle, classe StarSystem -> unica istanza ArrayList<Star>:
attributi: numero stelle;
metodi:
	draw() -> disegna tutte le stelle contenute nell'ArrayList, curare la distribuzione;
	add() -> aggiunge una stella al sistema;
	remove() -> rimuove la stella dal sistema;
abbiamo uno spazio grande 'Space' con molte stelle disseminate su di esso (lo StarSystem deve occuparsi di posizionarle in modo che siano ben distruite), lo schermo cattura solo una porzione centrale di questo spazio 'Screen'.

-Stella, classe Star -> una istanza per stella:
attributi: visual magnitude, color, ... (nel dataset c'è roba);
metodi:
	draw() -> disegna la singola stella (chiamata nella draw() dello StarSystem);
	effect() -> cosa succede quando ci interagisco???
sono distribuite sullo 'Space' (ovvero tutto attorno la terra), solo quelle inquadrate nello 'Window'(cioè il cielo visibile da dove ci troviamo) sono disegnate.


Cielo pulito:
deve essere un insieme di molti blocchi di sfumature dei colori tipici dell'universo. (processing o immagine caricata???)


--------------- TORCIA ---------------
gyrosc:
raccogliere le coordinate e l'inclinazione dal telefono. le coordinate daranno la porzione di cielo visibile ("Window"), l'inclinazione darà la porzione di "Window" in cui il layer 'cielo sporco' viene eliminato (->opacity) e si vedono i due layer sottostanti.


--------------- SUONO ----------------
Ableton: Drone, ambient, sample reali.
stella puntata -> osc con parametri(size stella, color stella, mass stella, distanza stella-centro cerchio torcia, posizione sullo 'Screen', tutto ciò che riusciamo a ricavare) -> suono da ableton -> evento sullo schermo sulla base del suono (cambio colore del cielo? aumenta/diminuisce porzione di cielo pulita dalla torcia? ...)


--------------- SOLE -----------------
il sole porta il giorno (-> agisco sul layer 'cielo sporco' modificandone i colori, opacity al massimo, non vedo più le stelle)
classe Sun -> una unica istanza:
palla gialla con attorno la criniera di raggi. il sole è opprimente, voglio che se ne vada -> 60/90 secondi in time lapse in cui il sole si muove dall'alba al tramonto con un suono fastidioso. la criniera di raggi è lo spettro sonoro e sulla base di dove punto il telefono ci interagisco in qualche modo.
nel mentre abbiamo nuvole che passano veloci, che coprono il sole (variazione colori e volume suono sulla base di quanto siamo esposti al sole?)
Deve dare l'idea del tempo che scorre, ma non un tempo piacevole, un tempo in cui voglio tornare a vedere le stelle, l'idea è di dare all'utente la sensazione di vivere una condizione malata, di inquinamento, l'utente deve preferire la "finzione" generata dall'applicazione (il poter vedere le stelle) alla realtà dei fatti (ciò che viviamo di fatto ogni giorno)


------------- EFFETTO STELLA ---------
quando interagisco con una stella aggiungiamo un effetto che potrebbe essere a sua volta particellare.
Crearlo come sistema particellare ci permette di parametrizzarlo e renderlo proprio per ogni stella sulla base degli attributi della stessa.



